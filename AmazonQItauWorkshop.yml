AWSTemplateFormatVersion: '2010-09-09'
Description: 'Plantilla de CloudFormation para desplegar una tabla DynamoDB y un contenedor en Fargate con un ALB en diferentes subredes.'

Parameters:
  ContainerName:
    Type: String
    Description: 'El nombre que se asignara al contenedor.'
    Description: 'El nombre que se asignara al contenedor.'
    Default: 'mutant-app'
  Repositorio:
    Type: String
    Description: 'Uri del repositorio'
    Default: '<account-id>.dkr.ecr.us-east-1.amazonaws.com/mutant-app'

Resources:
  # Clúster ECS
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: !Sub 'ecs-${ContainerName}'

  # Rol IAM para la tarea ECS
  ECSRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ECSAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/mutant
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:DescribeImages
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:DescribeRepositories
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  # Definición de Tarea
  TaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Sub 'task-${ContainerName}'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: '1024'
      Memory: '2048'
      ExecutionRoleArn: !GetAtt ECSRole.Arn
      TaskRoleArn: !GetAtt ECSRole.Arn
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Image: !Ref Repositorio
          Essential: true
          PortMappings:
            - ContainerPort: 8080

  # Grupo de Seguridad para ALB
  ALBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Permitir trafico HTTP al ALB desde cualquier puerto e IP'
      VpcId: !ImportValue workshop-pragma-VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  # Grupo de Seguridad para ECS
  ECSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Permitir trafico a los contenedores ECS'
      VpcId: !ImportValue workshop-pragma-VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          SourceSecurityGroupId: !Ref ALBSecurityGroup

  # ALB
  ALB:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: !Sub 'alb-${ContainerName}'
      Subnets:
        - !ImportValue workshop-pragma-PublicSubnet1
        - !ImportValue workshop-pragma-PublicSubnet2
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Scheme: internet-facing

  # Grupo Objetivo
  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      VpcId: !ImportValue workshop-pragma-VPCId
      Port: 8080
      Protocol: HTTP
      TargetType: ip
      HealthCheckProtocol: HTTP
      HealthCheckPort: '8080'
      HealthCheckPath: /actuator/health
      Matcher:
        HttpCode: 200
      Name: !Sub 'tg-${ContainerName}'
    DependsOn: ALB

  # Listener del ALB
  Listener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      LoadBalancerArn: !Ref ALB
      Port: 8080
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  # Servicio ECS
  ECSService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref TaskDefinition
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups: [!Ref ECSSecurityGroup]
          Subnets:
            - !ImportValue workshop-pragma-PrivateSubnet1
            - !ImportValue workshop-pragma-PrivateSubnet2
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: !Ref ContainerName
          ContainerPort: 8080
          TargetGroupArn: !Ref TargetGroup
    DependsOn: Listener

Outputs:
  Url:
    Description: 'URL'
    Value: !Sub 'http://${ALB.DNSName}:8080/pragma/stats'